from aiogram import Router
from aiogram.types import Message, CallbackQuery
from aiogram.filters import Command
from aiogram import F
from services.favorites_storage import FavoritesStorage
from aiogram.utils.keyboard import InlineKeyboardBuilder
from services.location_storage import PlaceStorage


router = Router()

# –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Ö—Ä–∞–Ω–∏–ª–∏—â–µ (—Ñ–∞–π–ª —Ä—è–¥–æ–º —Å bot.py: storage/favorites.json)
storage = FavoritesStorage("storage/favorites.json")
place_storage = PlaceStorage("storage/place.json")

# ---- –î–æ–±–∞–≤–∏—Ç—å –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ ----
# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: /add_fav <place>
@router.message(Command("add_fav"))
async def cmd_add_favorit(message: Message):
    parts = message.text.split(maxsplit=1)
    if len(parts) < 2:
        return await message.reply("–í—ã –∑–∞–±—ã–ª–∏ –Ω–∞–ø–∏—Å–∞—Ç—å –º–µ—Å—Ç–æ.\n–í–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –∫–æ–º–∞–Ω–¥–æ–π /add_fav <place>")

    place = parts[1].strip()
    # –æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ –º–æ–∂–Ω–æ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ —á–µ—Ä–µ–∑ mal_client.anime_exists
    await storage.add(message.from_user.id, place)
    await message.reply(f"{place} –¥–æ–±–∞–≤–ª–µ–Ω –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ.")

# ---- –°–ø–∏—Å–æ–∫ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ ----
@router.message(Command("favorites"))
async def cmd_list_favorites(message: Message):
    favs = await storage.list(message.from_user.id)
    if not favs:
        return await message.reply("–ü–æ–∫–∞ –Ω–µ—Ç –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ üôÅ")
    text = "–í–∞—à–µ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ:\n" + "\n".join(f"- {a}" for a in favs)
    # –∫–Ω–æ–ø–∫–∏ –¥–ª—è –≤—ã–±–æ—Ä–∞ –∫–∞–∂–¥–æ–≥–æ:
    kb = InlineKeyboardBuilder()
    for fav in favs:
        kb.button(text=f"{fav}", callback_data=f"choose_place_{fav}")
    kb.adjust(1)
    await message.reply(text, reply_markup=kb.as_markup())

# –í—ã–±—Ä–∞—Ç—å –ø–æ –∫–Ω–æ–ø–∫–µ
@router.callback_query(lambda c: c.data.startswith("choose_place_"))
async def cmd_choose_place(query: CallbackQuery):
    place = query.data.split("_", 2)[2]
    await place_storage.choice(query.from_user.id, place)
    await query.answer(f"{place} –≤—ã–±—Ä–∞–Ω.", show_alert=False)

# ---- –£–¥–∞–ª–∏—Ç—å –∏–∑ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ –∫–æ–º–∞–Ω–¥–æ–π ----
@router.message(Command("remove_fav"))
async def cmd_remove_favorit(message: Message):
    parts = message.text.split(maxsplit=1)
    if len(parts) < 2:
        return await message.reply("–í—ã –∑–∞–±—ã–ª–∏ –Ω–∞–ø–∏—Å–∞—Ç—å –º–µ—Å—Ç–æ.\n–í–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –∫–æ–º–∞–Ω–¥–æ–π /remove_fav <place>")
    place = parts[1].strip()
    await storage.remove(message.from_user.id, place)
    await message.reply(f"‚ùå {place} —É–¥–∞–ª–µ–Ω –∏–∑ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ.")



